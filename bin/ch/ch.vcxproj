<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Condition="'$(ChakraBuildPathImported)'!='true'" Project="$(SolutionDir)Chakra.Build.Paths.props" />
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.ProjectConfiguration.props" />
  <PropertyGroup Label="Globals">
    <ProjectGuid>{0216C4BE-86CE-478D-A134-23EAEE545B9D}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <PropertyGroup Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
  </PropertyGroup>
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.Default.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.props" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>
        $(ChakraCoreRootDirectory)Lib\Jsrt;
        %(AdditionalIncludeDirectories);
        $(MSBuildThisFileDirectory);
        $(ChakraCoreRootDirectory)Lib\Common;
        $(ChakraCoreRootDirectory)Lib\Runtime;
        $(ChakraCoreRootDirectory)Bin\ChakraCore;
        $(IntDir);
        %(AdditionalIncludeDirectories);
      </AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <ModuleDefinitionFile>ch.def</ModuleDefinitionFile>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>
        %(AdditionalDependencies);
        oleaut32.lib;
        ole32.lib;
        kernel32.lib;
        Rpcrt4.lib;
        version.lib;
        bcrypt.lib;
      </AdditionalDependencies>
      <AdditionalDependencies Condition="'$(ChakraICU)'!='false' AND '$(IcuLibraryDependencies)'!=''">
        $(IcuLibraryDependencies);
        %(AdditionalDependencies)
      </AdditionalDependencies>
      <!-- Unsure why InitializeSecurityDescriptor, SetSecurityDescriptorDacl, and others require this only for ARM -->
      <AdditionalDependencies Condition="'$(ChakraICU)'=='static' AND '$(Platform)'=='ARM'">
        advapi32.lib;
        %(AdditionalDependencies)
      </AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ResourceCompile Include="$(MsBuildThisFileDirectory)ch.rc">
      <AdditionalIncludeDirectories>
        $(ChakraCoreRootDirectory)lib\common;
        %(AdditionalIncludeDirectories)
      </AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="ChakraRtInterface.h" />
    <ClInclude Include="Debugger.h" />
    <ClInclude Include="Helpers.h" />
    <ClInclude Include="HostConfigFlags.h" />
    <ClInclude Include="HostConfigFlagsList.h" />
    <ClInclude Include="JITProcessManager.h" />
    <ClInclude Include="MessageQueue.h" />
    <ClInclude Include="RuntimeThreadData.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="WScriptJsrt.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="ch.cpp" />
    <ClCompile Include="ChakraRtInterface.cpp" />
    <ClCompile Include="CodexAssert.cpp" />
    <ClCompile Include="Debugger.cpp" />
    <ClCompile Include="Helpers.cpp" />
    <ClCompile Include="HostConfigFlags.cpp" />
    <ClCompile Include="JITProcessManager.cpp" />
    <ClCompile Include="RuntimeThreadData.cpp" />
    <ClCompile Include="WScriptJsrt.cpp" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="DbgController.js">
      <Command>%windir%\system32\cscript.exe Encode.js DbgController.js "$(IntDir)DbgController.js.encoded"</Command>
      <Outputs>$(IntDir)DbgController.js.encoded;%(Outputs)</Outputs>
    </CustomBuild>
  </ItemGroup>
  <!-- Razzle binplace -->
  <ItemGroup Condition="'$(BuildingWithBuildExe)'=='true'">
    <BinplaceGenerated Include="DbgController.js">
      <DestinationFolder>jscript</DestinationFolder>
    </BinplaceGenerated>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ChakraCore\ChakraCore.vcxproj">
      <Project>{EA882C8D-81FC-42FE-ABD5-2666DB933FDB}</Project>
    </ProjectReference>
    <!-- for u_getVersion() referenced in PlatformAgnostic::ICUHelpers::GetICUMajorVersion -->
    <ProjectReference Condition="'$(ChakraICU)'=='static' OR '$(ChakraICU)'=='shared'" Include="..\..\deps\Chakra.ICU\Chakra.ICU.Common.vcxproj">
      <Project>{EE2A3111-4D85-427C-B0AB-E6B0EA7FFB44}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="262.js" />
    <None Include="ch.def" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\lib\Common\Codex\Chakra.Common.Codex.vcxproj">
      <Project>{1876e800-ad77-48c4-a2f7-e5265f24ac38}</Project>
    </ProjectReference>
  </ItemGroup>
  <!-- Conditionally include the group of files to sign because MBv2 knows what to do with this but the old build definition gets confused. -->
  <ItemGroup Condition="'$(VSO_MICROBUILD_V2)'=='True' AND '$(POGO_TYPE)'!='PGI'">
    <FilesToSign Include="$(OutDir)\ch.exe">
      <Authenticode>Microsoft400</Authenticode>
    </FilesToSign>
  </ItemGroup>
  <ItemGroup>
    <Manifest Include="ch.manifest" />
  </ItemGroup>
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.targets" Condition="exists('$(BuildConfigPropsPath)Chakra.Build.targets')" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
</Project>